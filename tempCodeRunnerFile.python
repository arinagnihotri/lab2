class Employee:
    def __init__(self, emp_id, name, age, salary):
        self.emp_id = emp_id
        self.name = name
        self.age = age
        self.salary = salary

    def __str__(self):
        return f"{self.emp_id.ljust(12)}{self.name.ljust(10)}{str(self.age).ljust(5)}{str(self.salary)}"


class EmployeeTable:
    def __init__(self):
        self.employees = []

    def add_employee(self, employee):
        self.employees.append(employee)

    def display_table(self):
        print("Employee ID  Name      Age   Salary")
        for employee in self.employees:
            print(employee)

    def sort_table(self, sort_key):
        self.employees.sort(key=lambda x: getattr(x, sort_key))

    def run(self):
        print("1. Age\n2. Name\n3. Salary")
        sort_choice = input("Enter the sorting parameter (1/2/3): ")

        if sort_choice == "1":
            sort_key = "age"
        elif sort_choice == "2":
            sort_key = "name"
        elif sort_choice == "3":
            sort_key = "salary"
        else:
            print("Invalid choice. Exiting.")
            return

        self.sort_table(sort_key)
        self.display_table()


if __name__ == "__main__":
    employee1 = Employee("161E90", "Ramu", 35, 59000)
    employee2 = Employee("171E22", "Tejas", 30, 82100)
    employee3 = Employee("171G55", "Abhi", 25, 100000)
    employee4 = Employee("152K46", "Jaya", 32, 85000)

    employee_table = EmployeeTable()

    employee_table.add_employee(employee1)
    employee_table.add_employee(employee2)
    employee_table.add_employee(employee3)
    employee_table.add_employee(employee4)

    employee_table.run()
